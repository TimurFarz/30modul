import chromedriver_autoinstaller

import pytest
from selenium import webdriver
from selenium.webdriver.common.by import By



@pytest.fixture(autouse=True)
def testing():
    pytest.driver = webdriver.Chrome('C:/Chrome-selenium/chromedriver.exe')
    # Переходим на страницу авторизации
    pytest.driver.get('https://petfriends.skillfactory.ru/login')

    yield driver

    pytest.driver.quit()


def test_show_my_pets():
    # Вводим email, заменить на свой email для того чтобы получить свой список питомцев
    driver.find_element(By.ID, 'email').send_keys('pyhianov.rom@yandex.ru')
    # Вводим пароль
    driver.find_element(By.ID, 'pass').send_keys('12345')
    # Нажимаем на кнопку входа в аккаунт
    driver.find_element(By.CSS_SELECTOR, 'button[type="submit"]').click()
    # Проверяем, что мы оказались на главной странице пользователя
    assert pytest.driver.find_element(By.TAG_NAME, 'h1').text == "PetFriends"
    pytest.driver.find_element(By.XPATH, '//*[@id="navbarNav]/ul[1]/li[1]/a[1]').click()
    assert pytest.driver.find_element(By.TAG_NAME, 'h2').text == "Romankieg88"

    images = pyrest.driver.find_element(By.CSS_SELECTOR. '.card-desk .card-img-top')
    nanes = pyrest.driver.find_element(By.CSS_SELECTOR. '.card-desk .card-title')
    descriptions = pyrest.driver.find_element(By.CSS_SELECTOR. '.card-desk .card-text')

    for i in range(len(names)):
       assert images[i].get_attribute('src') !=''
       assert nanes[i].text !=''
       assert descriptions[i].text != ''
       assert ', ' in descriptions
       parts = descriptions[i].text.split(", ")
       assert len(parts[0]) > 0
       assert len(parts[1]) > 0

def test_show_my_pets_present():
    # Вводим email
    driver.find_element(By.ID, 'email').send_keys('pyhianov.rom@yandex.ru')
    # Вводим пароль
    driver.find_element(By.ID, 'pass').send_keys('12345')
    # Нажимаем на кнопку входа в аккаунт
    driver.find_element(By.CSS_SELECTOR, 'button[type="submit"]').click()
    # Проверяем, что мы оказались на главной странице пользователя
    assert pytest.driver.find_element(By.TAG_NAME, 'h1').text == "PetFriends"
    pytest.driver.find_element(By.XPATH, '//*[@id="navbarNav]/ul[1]/li[1]/a[1]').click()
    assert pytest.driver.find_element(By.TAG_NAME, 'h2').text == "Romankieg88"

    pets = pytest.driver.find_elements(By.XPATH, '//[@id="all_my_pets"]/table[1]/tbody/tr')
    quantity_of_pets = len(pets)

    for i in pytest.driver.find_elements(By.CSS_SELECTOR, '.\\.col-sm-4.left')
        pet_amount = i.text

    assert str(quantity_of_pets) in list(pet_amount)


    all_pets_images = pytest.driver.find_elements(By.XPATH, '//[@id="all_my_pets"]/table[1]/tbody/tr/th/img')

    # проверяем что список своих питомцев не пуст
    assert len(all_my_pets) > 0

    pets_info = []
    for i in range(len(all_my_pets)):
       # получаем информацию о питомце из списка всех своих питомцев
       pet_info = all_my_pets[i].text

       # избавляемся от лишних символов '\n×'
       pet_info = pet_info.split("\n")[0]

       # добавляем в список pets_info информацию рода: имя, тип, возраст,  по каждому питомцу
       pets_info.append(pet_info)
